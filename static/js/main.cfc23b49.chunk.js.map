{"version":3,"sources":["components/Text/Text.js","components/HeaderTitle/HeaderTitle.js","utils/calculateTime.js","hooks/useTimer.js","utils/getReadableDate.js","utils/decOfNum.js","utils/getParsedTime.js","components/PreviewCard/PreviewCard.js","panels/Home/Home.js","components/Header/Header.js","utils/getCorrectFontSize.js","components/EventCard/EventCard.js","components/EventCard/types/inline/EventCardInline.js","components/EventCard/types/center/EventCardCenter.js","components/EventCard/types/square/EventCardSquare.js","components/FloatingActionButton/FloatingActionButton.js","utils/shareEvent.js","panels/Event/Event.js","components/Input/Input.js","store/actions/newEvent.js","store/actions/events.js","panels/SelectEventName/SelectEventName.js","components/Modal/Modal.js","components/DatePicker/DatePicker.js","utils/getReadableTime.js","panels/SelectEventDate/SelectEventDate.js","components/EventCardExample/EventCardExample.js","panels/SelectEventTheme/SelectEventTheme.js","panels/EditEvent/EditEvent.js","App.js","hooks/useNavigation.js","store/reducers/events.js","store/reducers/newEvent.js","store/index.js","index.js","store/middleware.js"],"names":["Text","className","color","font","bold","children","cn","HeaderTitle","props","calculateTime","date","result","moments","days","hours","minutes","seconds","diff","Date","time","Math","abs","Object","keys","forEach","key","floor","useTimer","initialDate","useState","timer","setTimer","useEffect","interval","setInterval","clearInterval","moment","locale","getReadableDate","format","decCache","decCases","decOfNum","number","titles","min","variants","getParsedTime","onlyOneMoment","orderedMoments","i","length","reduce","a","v","PreviewCard","id","name","theme","onPreviewCardClick","amount","dateType","data-to","onClick","e","Home","goForward","fetchedEvents","setEvent","combineHandlers","bridge","send","style","separator","title","map","vertical","before","Header","osName","goBack","text","IOS","sizes","dateLength","themes","fontSize","data-width","ThemedContent","createElement","EventCard","timeMoments","acc","getCorrectFontSize","FAB","storyShareClosure","wallPostShareClosure","hidden","setHidden","mapBackground","getMessage","str","platform","Event","eventId","useSelector","events","filter","event","node","transform","transformOrigin","width","offsetWidth","height","offsetHeight","padding","borderRadius","background","param","quality","domtoimage","toPng","then","blob","background_type","stickers","sticker_type","sticker","can_delete","content_type","relation_width","clickable_zones","action_type","action","link","process","tooltip_text_key","clickable_area","x","y","catch","error","console","storyShare","document","getElementsByClassName","message","attachments","wallPostShare","Input","forwardRef","ref","NewEventActionTypes","LoadingState","EventsActionTypes","setEventsLoadingState","loadingState","type","payload","loadEvents","dispatch","fetch","REACT_APP_LOCAL_URL","window","location","search","res","json","setEvents","err","log","createEvent","addEvent","method","headers","body","JSON","stringify","deleteEvent","userId","removeEvent","updateEvent","changes","updateEventProperties","SelectEventName","isUpdater","useDispatch","setName","inputRef","useRef","current","focus","placeholder","onChange","value","target","eventName","setEventName","Modal","isOpen","mapOsNames","ANDROID","datePickerTheme","monthMap","1","2","3","4","5","6","7","8","9","10","11","12","mainConfig","caption","step","month","getMonth","year","extraTimeConfig","hour","minute","DatePicker","exactTime","isPopup","showHeader","showFooter","dateConfig","SelectEventDate","setDate","exactDate","setExactDate","isModalOpen","setModalState","newDate","getReadableTime","stopPropagation","setSeconds","setMilliseconds","setHours","getHours","setMinutes","getMinutes","getTime","setEventDate","EventCardExample","selected","data-theme","fill","SelectEventTheme","clearHistory","newEvent","setSelected","dataset","el","generateId","expandable","asideContent","disabled","App","size","popout","setPopout","initialPanel","activePanel","setActivePanel","history","setHistory","to","currentTarget","hist","push","pop","panel","useNavigation","currentEventId","setCurrentEventId","setUserId","currentEvent","fetchData","isWebView","onSwipeBack","header","initialState","eventsReducer","produce","draft","newEventReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cfc23b49.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport './Text.css';\n\nconst Text = ({\n\tclassName, color, font, bold, children,\n}) => (\n\t<span className={cn(['text', className, `text-${color}`, `text-${font}`], {\n\t\t'text-bold': bold,\n\t})}\n\t>\n\t\t{children}\n\t</span>\n);\n\nexport default Text;\n","import React from 'react';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nimport Text from '../Text';\n\nconst HeaderTitle = ({ className, children, ...props }) => (\n\t<Div className='header-title-wrapper'>\n\t\t<Text className={className} {...props}>\n\t\t\t{children}\n\t\t</Text>\n\t</Div>\n);\n\nexport default HeaderTitle;\n","export const calculateTime = date => {\n\tconst result = {};\n\tconst moments = {\n\t\tdays: 86400,\n\t\thours: 3600,\n\t\tminutes: 60,\n\t\tseconds: 1,\n\t};\n\n\tlet diff = (+date - +new Date()) / 1000;\n\tresult.time = diff > 0 ? 'future' : 'past';\n\tdiff = Math.abs(diff);\n\n\tObject.keys(moments).forEach(key => {\n\t\tresult[key] = Math.floor(diff / moments[key]);\n\t\tdiff -= result[key] * moments[key];\n\t});\n\n\treturn result;\n};\n","import { useState, useEffect } from 'react';\n\nimport { calculateTime } from '../utils/calculateTime';\n\nexport const useTimer = initialDate => {\n\tconst [timer, setTimer] = useState(calculateTime(initialDate));\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetTimer(timer => ({ ...timer, ...calculateTime(initialDate) }));\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [initialDate]);\n\n\treturn timer;\n};\n","import moment from 'moment';\nimport 'moment/locale/ru';\n\nmoment.locale('ru');\n\nexport const getReadableDate = date => moment(date).format('LLL');\n","const decCache = [];\nconst decCases = [2, 0, 1, 1, 1, 2];\n\nexport const decOfNum = (number, titles) => {\n\tif (!decCache[number]) {\n\t\tdecCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\n\t}\n\n\treturn titles[decCache[number]];\n};\n","import { decOfNum } from './decOfNum';\n\nexport const variants = {\n\tseconds: ['секунда', 'секунды', 'секунд'],\n\tminutes: ['минута', 'минуты', 'минут'],\n\thours: ['час', 'часа', 'часов'],\n\tdays: ['день', 'дня', 'дней']\n};\n\nexport const getParsedTime = (moments, onlyOneMoment) => {\n\tconst orderedMoments = ['days', 'hours', 'minutes', 'seconds'];\n\tlet key = 'seconds';\n\n\tfor (let i = 0; i < orderedMoments.length; i += 1) {\n\t\tif (moments[orderedMoments[i]] > 0) {\n\t\t\tkey = orderedMoments[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn onlyOneMoment\n\t\t? [moments[key], decOfNum(moments[key], variants[key])]\n\t\t: orderedMoments.reduce(\n\t\t\t\t(a, v) => ({ ...a, [v]: [moments[v], decOfNum(moments[v], variants[v])] }),\n\t\t\t\t{}\n\t\t  );\n};\n","import React from 'react';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport cn from 'classnames';\n\nimport Text from '../Text';\nimport { useTimer } from '../../hooks/useTimer';\nimport { getReadableDate } from '../../utils/getReadableDate';\nimport { getParsedTime } from '../../utils/getParsedTime';\n\nimport './PreviewCard.css';\n\nconst PreviewCard = ({ id, className, name, date, theme, onPreviewCardClick }) => {\n\tconst { time, ...moments } = useTimer(date);\n\tconst [amount, dateType] = getParsedTime(moments, true);\n\n\treturn (\n\t\t<Div\n\t\t\tclassName='preview-card-wrapper'\n\t\t\tdata-to='event'\n\t\t\tonClick={e => onPreviewCardClick(e, id)}\n\t\t>\n\t\t\t<div className={cn(['preview-card', className, `preview-card-${theme}`])}>\n\t\t\t\t<div className='card-event'>\n\t\t\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t\t\t{time === 'future' ? 'До' : 'C'}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text color='white' font='h3' bold>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</Text>\n\t\t\t\t</div>\n\t\t\t\t<div className='card-date'>\n\t\t\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t\t\t{getReadableDate(date)}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<div className='date-inline'>\n\t\t\t\t\t\t<Text color='white' font='h3' bold>\n\t\t\t\t\t\t\t{amount}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text className='date-inline-type' color='transparent' font='body3'>\n\t\t\t\t\t\t\t{dateType}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Div>\n\t);\n};\n\nexport default PreviewCard;\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport HeaderTitle from '../../components/HeaderTitle';\nimport PreviewCard from '../../components/PreviewCard';\n\nimport './Home.css';\n\nconst Home = ({ id, goForward, fetchedEvents, setEvent }) => {\n\tconst combineHandlers = (e, id) => {\n\t\tgoForward(e);\n\t\tsetEvent(id);\n\t\tbridge.send('VKWebAppTapticImpactOccurred', { style: 'heavy' });\n\t};\n\n\treturn (\n\t\t<Panel id={id} separator={false}>\n\t\t\t<HeaderTitle className='home-header' color='softBlue' font='h1' bold>\n\t\t\t\tМои События\n\t\t\t</HeaderTitle>\n\t\t\t<Group title='Events'>\n\t\t\t\t<List>\n\t\t\t\t\t{fetchedEvents &&\n\t\t\t\t\t\tfetchedEvents.map(({ id, name, date, theme }) => (\n\t\t\t\t\t\t\t<PreviewCard\n\t\t\t\t\t\t\t\tkey={`event-${id}`}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\ttheme={theme}\n\t\t\t\t\t\t\t\tonPreviewCardClick={combineHandlers}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Group>\n\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t<Button\n\t\t\t\t\tclassName='add-button'\n\t\t\t\t\tbefore={<Icon28AddOutline />}\n\t\t\t\t\tonClick={goForward}\n\t\t\t\t\tdata-to='create_event_name'\n\t\t\t\t/>\n\t\t\t</FixedLayout>\n\t\t</Panel>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { IOS } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Text from '../Text';\n\nimport './Header.css';\n\nconst Header = ({ className, osName, goBack, color, text }) => {\n    return (\n        <div className={cn(['header-wrapper', `header-wrapper-${color}`, className])}>\n            {\n                goBack && (\n                    <PanelHeaderButton onClick={goBack} data-to='home' className='header-button'>\n                        { osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/> }\n                    </PanelHeaderButton>\n                )\n            }\n            {\n                text && <Text className='header-text' font='body3' bold>{text}</Text>\n            }\n        </div>\n    );\n};\n\nexport default Header;\n","const sizes = {\n\tSIZE_H3: 'h3',\n\tSIZE_BODY_1: 'body1',\n\tSIZE_BODY_3: 'body3',\n};\n\nconst dateLength = {\n\tSMALL: 7,\n\tBIG: 10,\n};\n\n/**\n * Функция, которая высчитывает корректный размер шрифта для EventCard с темой 'inline',\n * чтобы время помещалось в одноу строку\n *\n * @param moment - объект с текущим временем EventCard\n * @returns {string} - корректный размер шрифта для отображения\n */\nexport const getCorrectFontSize = moment => {\n\tconst { length } = Object.keys(moment).reduce((acc, key) => acc + moment[key], '');\n\n\tif (length <= dateLength.SMALL) {\n\t\treturn sizes.SIZE_H3;\n\t}\n\n\tif (length > dateLength.SMALL && length < dateLength.BIG) {\n\t\treturn sizes.SIZE_BODY_1;\n\t}\n\n\treturn sizes.SIZE_BODY_3;\n};\n","import React, { createElement } from 'react';\nimport cn from 'classnames';\n\nimport Text from '../Text';\nimport { EventCardBlueGradient } from './themes/blue-gradient/EventCardBlueGradient';\nimport { EventCardRedGradient } from './themes/red-gradient/EventCardRedGradient';\nimport { EventCardVioletGradient } from './themes/violet-gradient/EventCardVioletGradient';\nimport { getReadableDate } from '../../utils/getReadableDate';\nimport { getCorrectFontSize } from '../../utils/getCorrectFontSize';\n\nimport './EventCard.css';\n\nconst themes = {\n\t'blue-gradient': EventCardBlueGradient,\n\t'red-gradient': EventCardRedGradient,\n\t'violet-gradient': EventCardVioletGradient\n};\n\nconst ThemedContent = ({ theme, ...props }) => createElement(themes[theme], props);\n\nconst EventCard = ({ name, date, time, timeMoments, theme }) => {\n\tconst fontSize = getCorrectFontSize(timeMoments);\n\n\treturn (\n\t\t<div className={cn(['event-card-wrapper'])}>\n\t\t\t<Text color='white' font='body2' bold>\n\t\t\t\t{time === 'future' ? 'До' : 'C'}: {name}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{getReadableDate(date)}\n\t\t\t</Text>\n\t\t\t<ThemedContent theme={theme} fontSize={fontSize} {...timeMoments} />\n\t\t</div>\n\t);\n};\n\nexport default EventCard;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport Text from '../../../Text';\n\nimport './EventCardInline.css';\n\nexport const EventCardInline = ({ days, hours, minutes, seconds, fontSize }) => (\n\t<div className={cn(['event-card-date', 'event-card-date-inline'])}>\n\t\t<div className={cn(['event-card-time', 'event-card-time-inline'])}>\n\t\t\t<Text color='white' font={fontSize}>\n\t\t\t\t{days[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{days[1]}\n\t\t\t</Text>\n\t\t</div>\n\t\t<Text className='colon-separator' color='white' font={fontSize}>\n\t\t\t:\n\t\t</Text>\n\t\t<div className={cn(['event-card-time', 'event-card-time-inline'])}>\n\t\t\t<Text color='white' font={fontSize}>\n\t\t\t\t{hours[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{' '}\n\t\t\t\t{hours[1]}\n\t\t\t</Text>\n\t\t</div>\n\t\t<Text className='colon-separator' color='white' font={fontSize}>\n\t\t\t:\n\t\t</Text>\n\t\t<div className={cn(['event-card-time', 'event-card-time-inline'])}>\n\t\t\t<Text color='white' font={fontSize}>\n\t\t\t\t{[minutes[0]]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{' '}\n\t\t\t\t{minutes[1]}\n\t\t\t</Text>\n\t\t</div>\n\t\t<Text className='colon-separator' color='white' font={fontSize}>\n\t\t\t:\n\t\t</Text>\n\t\t<div className={cn(['event-card-time', 'event-card-time-inline'])}>\n\t\t\t<Text color='white' font={fontSize}>\n\t\t\t\t{seconds[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{' '}\n\t\t\t\t{seconds[1]}\n\t\t\t</Text>\n\t\t</div>\n\t</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport Text from '../../../Text';\n\nimport './EventCardCenter.css';\n\nexport const EventCardCenter = ({ days, hours, minutes, seconds }) => (\n\t<div className={cn(['event-card-date', 'event-card-date-center'])}>\n\t\t<Text className={cn(['event-card-time', 'event-card-time-center'])} color='white' font='h1'>\n\t\t\t{days[0]}\n\t\t\t<div className='event-card-days-after' data-width={days[1].length}>\n\t\t\t\t<Text color='transparent' font='body2' data-width='3'>\n\t\t\t\t\t{days[1]}\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t</Text>\n\t\t<Text className={cn(['event-card-time', 'event-card-time-center'])} color='white' font='h1'>\n\t\t\t{hours[0]}\n\t\t\t<div className='event-card-hours-before' data-width={hours[1].length}>\n\t\t\t\t<Text color='transparent' font='body2'>\n\t\t\t\t\t{hours[1]}\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t</Text>\n\t\t<Text className={cn(['event-card-time', 'event-card-time-center'])} color='white' font='h1'>\n\t\t\t{minutes[0]}\n\t\t\t<div className='event-card-minutes-after' data-width={minutes[1].length}>\n\t\t\t\t<Text color='transparent' font='body2'>\n\t\t\t\t\t{minutes[1]}\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t</Text>\n\t\t<Text className={cn(['event-card-time', 'event-card-time-center'])} color='white' font='h1'>\n\t\t\t{seconds[0]}\n\t\t\t<div className='event-card-seconds-before' data-width={seconds[1].length}>\n\t\t\t\t<Text color='transparent' font='body2'>\n\t\t\t\t\t{seconds[1]}\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t</Text>\n\t</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport Text from '../../../Text';\n\nimport './EventCardSquare.css';\n\nexport const EventCardSquare = ({ days, hours, minutes, seconds }) => (\n\t<div className={cn(['event-card-date', 'event-card-date-square'])}>\n\t\t<div className={cn(['event-card-time', 'event-card-time-square'])}>\n\t\t\t<Text color='white' font='h1'>\n\t\t\t\t{days[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{days[1]}\n\t\t\t</Text>\n\t\t</div>\n\t\t<div className={cn(['event-card-time', 'event-card-time-square'])}>\n\t\t\t<Text color='white' font='h1'>\n\t\t\t\t{hours[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{' '}\n\t\t\t\t{hours[1]}\n\t\t\t</Text>\n\t\t</div>\n\t\t<div className={cn(['event-card-time', 'event-card-time-square'])}>\n\t\t\t<Text color='white' font='h1'>\n\t\t\t\t{minutes[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{' '}\n\t\t\t\t{minutes[1]}\n\t\t\t</Text>\n\t\t</div>\n\t\t<div className={cn(['event-card-time', 'event-card-time-square'])}>\n\t\t\t<Text color='white' font='h1'>\n\t\t\t\t{seconds[0]}\n\t\t\t</Text>\n\t\t\t<Text color='transparent' font='body3'>\n\t\t\t\t{' '}\n\t\t\t\t{seconds[1]}\n\t\t\t</Text>\n\t\t</div>\n\t</div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon24Share from '@vkontakte/icons/dist/24/share';\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\nimport './FloatingActionButton.css';\n\nconst FAB = ({ goForward, storyShareClosure, wallPostShareClosure }) => {\n\tconst [hidden, setHidden] = useState(false);\n\n\treturn (\n\t\t<FixedLayout vertical='bottom' className={cn('container', { hidden })}>\n\t\t\t<Button className='buttons' before={<Icon24Share />} onClick={wallPostShareClosure} />\n\t\t\t<Button className='buttons' before={<Icon24Story />} onClick={storyShareClosure} />\n\t\t\t<Button\n\t\t\t\tclassName='buttons'\n\t\t\t\tbefore={<Icon28SettingsOutline />}\n\t\t\t\tonClick={goForward}\n\t\t\t\tdata-to='edit_event'\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tclassName='buttons'\n\t\t\t\tbefore={<Icon24MoreHorizontal />}\n\t\t\t\tonClick={() => setHidden(!hidden)}\n\t\t\t/>\n\t\t</FixedLayout>\n\t);\n};\n\nexport default FAB;\n","import bridge from '@vkontakte/vk-bridge';\nimport domtoimage from 'dom-to-image';\n\nconst mapBackground = {\n\t'blue-gradient': 'linear-gradient(315deg, #738bdc 0%, #48c3eb 74%)',\n\t'red-gradient': 'linear-gradient(315deg, #ee9617 0%, #fe5858 74%)',\n\t'violet-gradient': 'linear-gradient(315deg, #42378f 0%, #f53844 74%)'\n};\n\nconst getMessage = (time, name, { days, hours, minutes, seconds }) => {\n\tlet str = '';\n\n\tif (time === 'future') {\n\t\tstr += `До события \"${name}\" осталось `;\n\t} else {\n\t\tstr += `C начала события \"${name}\" уже прошло `;\n\t}\n\n\tstr +=\n\t\t`${days[0] !== 0 ? `${days[0]} ${days[1]} ` : ''}` +\n\t\t`${hours[0] !== 0 ? `${hours[0]} ${hours[1]} ` : ''}` +\n\t\t`${minutes[0] !== 0 ? `${minutes[0]} ${minutes[1]} ` : ''}` +\n\t\t`${seconds[0] !== 0 ? `${seconds[0]} ${seconds[1]}` : ''}!\\n\\n` +\n\t\t'Запечатлить свой момент можно в приложении Momentum.';\n\n\treturn str;\n};\n\nexport const wallPostShare = (time, name, timeMoments) => {\n\tbridge.send('VKWebAppShowWallPostBox', {\n\t\tmessage: getMessage(time, name, timeMoments),\n\t\tattachments: process.env.REACT_APP_URL\n\t});\n};\n\nexport const storyShare = (node, theme) => {\n\tconst scale = 2;\n\tconst style = {\n\t\ttransform: `scale(${scale})`,\n\t\ttransformOrigin: 'top left',\n\t\twidth: `${node.offsetWidth}px`,\n\t\theight: `${node.offsetHeight}px`,\n\t\tpadding: '20px',\n\t\tborderRadius: '15px',\n\t\tbackground: mapBackground[theme]\n\t};\n\tconst param = {\n\t\theight: node.offsetHeight * scale + 150,\n\t\twidth: node.offsetWidth * scale + 150,\n\t\tquality: 1,\n\t\tstyle\n\t};\n\n\tdomtoimage\n\t\t.toPng(node, param)\n\t\t.then(blob => {\n\t\t\tbridge.send('VKWebAppShowStoryBox', {\n\t\t\t\tbackground_type: 'none',\n\t\t\t\tstickers: [\n\t\t\t\t\t{\n\t\t\t\t\t\tsticker_type: 'renderable',\n\t\t\t\t\t\tsticker: {\n\t\t\t\t\t\t\tcan_delete: 0,\n\t\t\t\t\t\t\tcontent_type: 'image',\n\t\t\t\t\t\t\tblob,\n\t\t\t\t\t\t\ttransform: {\n\t\t\t\t\t\t\t\trelation_width: 0.75\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tclickable_zones: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\taction_type: 'link',\n\t\t\t\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\t\t\t\tlink: process.env.REACT_APP_URL,\n\t\t\t\t\t\t\t\t\t\ttooltip_text_key: 'tooltip_open_app'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tclickable_area: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tx: 17,\n\t\t\t\t\t\t\t\t\t\t\ty: 110\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tx: 97,\n\t\t\t\t\t\t\t\t\t\t\ty: 110\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tx: 97,\n\t\t\t\t\t\t\t\t\t\t\ty: 132\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tx: 17,\n\t\t\t\t\t\t\t\t\t\t\ty: 132\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.error('Story error', error);\n\t\t});\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { platform } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nimport Header from '../../components/Header/Header';\nimport EventCard from '../../components/EventCard/EventCard';\nimport FAB from '../../components/FloatingActionButton/FloatingActionButton';\nimport { useTimer } from '../../hooks/useTimer';\nimport { getParsedTime } from '../../utils/getParsedTime';\nimport { wallPostShare, storyShare } from '../../utils/shareEvent';\n\nimport './Event.css';\n\nconst osName = platform();\n\nconst Event = ({ id, goBack, eventId, goForward }) => {\n\tconst [event] = useSelector(({ events: { events } }) => events.filter(e => e.id === eventId));\n\tconst { time, ...moments } = useTimer(event.date);\n\tconst timeMoments = getParsedTime(moments);\n\n\tconst wallPostShareClosure = () => wallPostShare(time, event.name, timeMoments);\n\n\tconst storyShareClosure = () => {\n\t\tconst node = document.getElementsByClassName('event-card-wrapper')[0];\n\t\tstoryShare(node, event.theme);\n\t};\n\n\treturn (\n\t\t<Panel\n\t\t\tid={id}\n\t\t\tseparator={false}\n\t\t\tclassName={cn(['event-panel', `event-panel-${event.theme}`])}\n\t\t>\n\t\t\t<Header osName={osName} goBack={goBack} color='white' />\n\t\t\t<EventCard\n\t\t\t\tname={event.name}\n\t\t\t\tdate={event.date}\n\t\t\t\ttime={time}\n\t\t\t\ttimeMoments={timeMoments}\n\t\t\t\ttheme={event.theme}\n\t\t\t/>\n\t\t\t<FAB\n\t\t\t\tgoForward={goForward}\n\t\t\t\tstoryShareClosure={storyShareClosure}\n\t\t\t\twallPostShareClosure={wallPostShareClosure}\n\t\t\t/>\n\t\t</Panel>\n\t);\n};\n\nexport default Event;\n","import React, { forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport './Input.css';\n\nconst Input = forwardRef(({\n\tclassName, color, font, ...props\n}, ref) => (\n\t<input\n\t\tclassName={cn(['input', className, `input-${color}`, `input-${font}`])}\n\t\tref={ref}\n\t\t{...props}\n\t/>\n));\n\nexport default Input;\n","export const NewEventActionTypes = {\n\tSET_EVENT_NAME: 'NEW_EVENT:SET_NAME',\n\tSET_EVENT_DATE: 'NEW_EVENT:SET_DATE',\n\tSET_EVENT_THEME: 'NEW_EVENT:SET_THEME',\n\tCLEAR: 'NEW_EVENT:CLEAR',\n};\n\nexport const setEventName = name => ({\n\ttype: NewEventActionTypes.SET_EVENT_NAME,\n\tpayload: {\n\t\tname,\n\t},\n});\n\nexport const setEventDate = date => ({\n\ttype: NewEventActionTypes.SET_EVENT_DATE,\n\tpayload: {\n\t\tdate,\n\t},\n});\n\nexport const setEventTheme = theme => ({\n\ttype: NewEventActionTypes.SET_EVENT_THEME,\n\tpayload: {\n\t\ttheme,\n\t},\n});\n\nexport const clearNewEvent = () => ({\n\ttype: NewEventActionTypes.CLEAR,\n});\n","export const LoadingState = {\n\tNotLoaded: 0,\n\tLoading: 1,\n\tLoaded: 2,\n\tErrored: 3\n};\n\nexport const EventsActionTypes = {\n\tSET_EVENTS: 'EVENTS:SET_EVENTS',\n\tSET_LOADING_STATE: 'EVENTS:SET_LOADING_STATE',\n\tADD_EVENT: 'EVENTS:ADD_EVENT',\n\tREMOVE_EVENT: 'EVENTS:REMOVE_EVENT',\n\tUPDATE_EVENT: 'EVENTS:UPDATE_EVENT',\n};\n\nexport const setEvents = events => ({\n\ttype: EventsActionTypes.SET_EVENTS,\n\tpayload: {\n\t\tevents\n\t}\n});\n\nexport const addEvent = event => ({\n\ttype: EventsActionTypes.ADD_EVENT,\n\tpayload: {\n\t\tevent\n\t}\n});\n\nexport const removeEvent = eventId => ({\n\ttype: EventsActionTypes.REMOVE_EVENT,\n\tpayload: {\n\t\teventId\n\t}\n});\n\nexport const updateEventProperties = (eventId, changes) => ({\n\ttype: EventsActionTypes.UPDATE_EVENT,\n\tpayload: {\n\t\teventId,\n\t\tchanges\n\t}\n});\n\nexport const setEventsLoadingState = loadingState => ({\n\ttype: EventsActionTypes.SET_LOADING_STATE,\n\tpayload: {\n\t\tloadingState\n\t}\n});\n\nexport const loadEvents = id => dispatch => {\n\tdispatch(setEventsLoadingState(LoadingState.Loading));\n\t\n\tfetch(\n\t\t`${process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_PUBLIC_URL}/user/${id}/${\n\t\t\tprocess.env.REACT_APP_API_TOKEN\n\t\t}/${window.location.search}`\n\t)\n\t\t.then(res => res.json())\n\t\t.then(({ events }) => {\n\t\t\tdispatch(setEvents(events));\n\t\t\tdispatch(setEventsLoadingState(LoadingState.Loaded));\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t\tdispatch(setEventsLoadingState(LoadingState.Errored));\n\t\t});\n};\n\nexport const createEvent = (id, event) => dispatch => {\n\tdispatch(addEvent(event));\n\tfetch(\n\t\t`${process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_PUBLIC_URL}/user/${id}/${\n\t\t\tprocess.env.REACT_APP_API_TOKEN\n\t\t}/add_event/${window.location.search}`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ event })\n\t\t}\n\t);\n};\n\nexport const deleteEvent = (userId, eventId) => dispatch => {\n\tdispatch(removeEvent(eventId));\n\tfetch(`${process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_PUBLIC_URL}/user/${userId}/${\n\t\tprocess.env.REACT_APP_API_TOKEN\n\t}/delete_event/${window.location.search}`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ eventId }),\n\t});\n};\n\nexport const updateEvent = (userId, eventId, changes) => dispatch => {\n\tdispatch(updateEventProperties(eventId, changes));\n\tfetch(`${process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_PUBLIC_URL}/user/${userId}/${\n\t\tprocess.env.REACT_APP_API_TOKEN\n\t}/update_event/${window.location.search}`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ eventId, ...changes }),\n\t});\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport cn from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { platform } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nimport Input from '../../components/Input';\nimport Text from '../../components/Text';\nimport Header from '../../components/Header';\nimport { setEventName } from '../../store/actions/newEvent';\n\nimport './SelectEventName.css';\nimport { updateEvent } from '../../store/actions/events';\n\nconst osName = platform();\n\nconst SelectEventName = ({ id, goForward, goBack, userId, event, isUpdater }) => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState(event ? event.name : '');\n    const handleChange = ({ target: { value } }) => setName(value);\n    const inputRef = useRef(null);\n    \n    const handleClick = props => {\n        const eventName = name || 'Назови Меня';\n        \n        if (isUpdater) {\n            dispatch(updateEvent(userId, event.id, { name: eventName }));\n            goBack();\n        } else {\n            dispatch(setEventName(name));\n            goForward(props);\n        }\n    };\n    \n    useEffect(() => {\n        const inputNode = inputRef.current;\n        inputNode.focus();\n    }, [inputRef]);\n    \n    return (\n        <Panel id={id} separator={false}>\n            <Header osName={osName} goBack={goBack} color='black'/>\n            <Div className={cn(['select-event-name-wrapper'])}>\n                <Text className='select-event-name-title' color='black' font='body3' bold>Название события:</Text>\n                <Input\n                    className='select-event-name-input'\n                    placeholder='Назови Меня'\n                    onChange={handleChange}\n                    value={name}\n                    font='h3'\n                    color='softBlue'\n                    ref={inputRef}\n                />\n                <Button\n                    className='select-event-name-button'\n                    onClick={handleClick}\n                    data-to='create_event_date'\n                >\n                    Готово\n                </Button>\n            </Div>\n        </Panel>\n    );\n};\n\nexport default SelectEventName;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport './Modal.css';\n\nconst Modal = ({ className, children, isOpen }) => (\n\t<div\n\t\tclassName={cn([\n\t\t\t'modal-wrapper',\n\t\t\tclassName,\n\t\t\t{\n\t\t\t\thidden: !isOpen\n\t\t\t}\n\t\t])}\n\t>\n\t\t<div className='modal-content'>{children}</div>\n\t</div>\n);\n\nexport default Modal;\n","import React from 'react';\nimport { IOS, ANDROID, platform } from '@vkontakte/vkui';\nimport * as BaseDatePicker from 'react-mobile-datepicker';\n\nconst osName = platform();\nconst mapOsNames = {\n\t[IOS]: 'ios',\n\t[ANDROID]: 'android'\n};\nconst datePickerTheme = mapOsNames[osName] ? mapOsNames[osName] : 'default';\n\nconst monthMap = {\n\t1: 'января',\n\t2: 'февраля',\n\t3: 'марта',\n\t4: 'апреля',\n\t5: 'мая',\n\t6: 'июня',\n\t7: 'июля',\n\t8: 'августа',\n\t9: 'сентября',\n\t10: 'октября',\n\t11: 'ноября',\n\t12: 'декабря',\n};\n\nconst mainConfig = {\n\tdate: {\n\t\tformat: 'DD',\n\t\tcaption: 'Day',\n\t\tstep: 1,\n\t},\n\tmonth: {\n\t\tformat: value => monthMap[value.getMonth() + 1],\n\t\tcaption: 'Mon',\n\t\tstep: 1,\n\t},\n\tyear: {\n\t\tformat: 'YYYY',\n\t\tcaption: 'Year',\n\t\tstep: 1,\n\t},\n};\n\nconst extraTimeConfig = {\n\thour: {\n\t\tformat: 'hh',\n\t\tcaption: 'Hour',\n\t\tstep: 1,\n\t},\n\tminute: {\n\t\tformat: 'mm',\n\t\tcaption: 'Min',\n\t\tstep: 1,\n\t},\n};\n\nconst DatePicker = ({ exactTime, ...props }) => (\n\t<BaseDatePicker\n\t\ttheme={datePickerTheme}\n\t\tisPopup={false}\n\t\tshowHeader={false}\n\t\tshowFooter={false}\n\t\tdateConfig={exactTime ? extraTimeConfig : mainConfig}\n\t\t{...props}\n\t/>\n);\n\nexport default DatePicker;\n","import moment from 'moment';\nimport 'moment/locale/ru';\n\nmoment.locale('ru');\n\nexport const getReadableTime = date => moment(date).format('HH:mm');\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { platform } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon16Recent from '@vkontakte/icons/dist/16/recent';\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\n\nimport Text from '../../components/Text';\nimport Modal from '../../components/Modal';\nimport DatePicker from '../../components/DatePicker';\nimport Header from '../../components/Header';\nimport { getReadableTime } from '../../utils/getReadableTime';\nimport { setEventDate } from '../../store/actions/newEvent';\n\nimport './SelectEventDate.css';\nimport { updateEvent } from '../../store/actions/events';\n\nconst osName = platform();\n\nconst SelectEventDate = ({ id, goForward, goBack, userId, event, isUpdater }) => {\n    const dispatch = useDispatch();\n    const [date, setDate] = useState(event ? new Date(event.date) : new Date());\n    const [exactDate, setExactDate] = useState(false);\n    const [isModalOpen, setModalState] = useState(false);\n    const handleDateChange = newDate => setDate(newDate);\n    const handleExactDateChange = newDate => setExactDate(newDate);\n    const handleMainButtonClick = props => {\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        \n        if (exactDate) {\n            date.setHours(exactDate.getHours());\n            date.setMinutes(exactDate.getMinutes());\n        } else {\n            date.setHours(0);\n            date.setMinutes(0);\n        }\n        \n        if (isUpdater) {\n            dispatch(updateEvent(userId, event.id, { date: date.getTime() }));\n            goBack();\n        } else {\n            dispatch(setEventDate(date.getTime()));\n            goForward(props);\n        }\n    };\n    const handleChooseDateClick = () => {\n        if (!exactDate) {\n\t\t\tsetExactDate(new Date(0));\n\t\t}\n        setModalState(true);\n    };\n    const handleChooseDateButtonClick = () => {\n        setModalState(false);\n    };\n    const handleDeleteDate = e => {\n        e.stopPropagation();\n        setExactDate(false);\n    };\n    \n    return (\n        <Panel id={id} separator={false}>\n            <Modal isOpen={isModalOpen}>\n                <div className='select-event-date-modal'>\n                    <Text className='title' color='black' font='body3' bold>Время события:</Text>\n                    {exactDate && (\n                        <DatePicker\n                            value={exactDate}\n                            onChange={handleExactDateChange}\n                            exactTime\n                        />\n                    )}\n                    <Button\n                        className='button'\n                        onClick={handleChooseDateButtonClick}\n                    >\n                        Готово\n                    </Button>\n                </div>\n            </Modal>\n            <Header osName={osName} goBack={goBack} color='black'/>\n            <Div className={cn(['select-event-date-wrapper'])}>\n                <Text className='select-event-date-title' color='black' font='body3' bold>Дата события:</Text>\n                <DatePicker\n                    value={date}\n                    onChange={handleDateChange}\n                />\n                <div className='time-picker' onClick={handleChooseDateClick}>\n                    <Icon16Recent/>\n                    <Text className='time-picker-text'>{exactDate ? getReadableTime(exactDate) : 'Укажите время'}</Text>\n                    {exactDate && <Icon16CancelCircleOutline onClick={handleDeleteDate}/>}\n                </div>\n                <Button\n                    className='select-event-date-button'\n                    onClick={handleMainButtonClick}\n                    data-to='create_event_theme'\n                >\n                    Готово\n                </Button>\n            </Div>\n        </Panel>\n    );\n};\n\nexport default SelectEventDate;\n","import React from 'react';\nimport cn from 'classnames';\nimport Icon36Done from '@vkontakte/icons/dist/36/done';\n\nimport './EventCardExample.css';\n\nconst EventCardExample = ({ className, theme, selected }) => (\n\t<div\n\t\tclassName={cn(['event-card-example', className, `event-card-example-${theme}`])}\n\t\tdata-theme={theme}\n\t>\n\t\t{selected && (\n\t\t\t<>\n\t\t\t\t<div className='selected' />\n\t\t\t\t<Icon36Done fill='white' className='done-icon' />\n\t\t\t</>\n\t\t)}\n\t</div>\n);\n\nexport default EventCardExample;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport cn from 'classnames';\nimport { generate as generateId } from 'shortid';\nimport { platform } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\n\nimport EventCardExample from '../../components/EventCardExample';\nimport Header from '../../components/Header';\nimport { createEvent, updateEvent } from '../../store/actions/events';\nimport { clearNewEvent } from '../../store/actions/newEvent';\n\nimport './SelectEventTheme.css';\n\nconst osName = platform();\n\nconst themes = ['red-gradient', 'blue-gradient', 'violet-gradient'];\n\nconst SelectEventTheme = ({ id, goForward, goBack, clearHistory, userId, event, isUpdater }) => {\n    const dispatch = useDispatch();\n    const newEvent = useSelector(({ newEvent: { newEvent } }) => newEvent);\n    const [selected, setSelected] = useState(event ? event.theme : 'red-gradient');\n    const handleSelect = ({ target: { dataset: { theme } } }) => {\n        if (theme) {\n\t\t\tsetSelected(theme);\n\t\t}\n    };\n    const handleClick = props => {\n        if (isUpdater) {\n            dispatch(updateEvent(userId, event.id, { theme: selected }));\n            goBack();\n        } else {\n            dispatch(createEvent(userId, { ...newEvent, theme: selected, id: generateId() }));\n            dispatch(clearNewEvent());\n            goForward(props);\n            clearHistory();\n        }\n    };\n    \n    return (\n        <Panel id={id} separator={false}>\n            <Header className='select-event-theme-header' osName={osName} goBack={goBack} color='black'\n                    text='Темы оформления'/>\n            <Div className={cn(['select-event-theme-wrapper'])}>\n                <div className='example-cards-container' onClick={handleSelect}>\n                    {\n                        themes.map(el => (\n                            <EventCardExample key={el} theme={el} selected={selected === el}/>\n                        ))\n                    }\n                </div>\n                <FixedLayout vertical='bottom'>\n                    <Button\n                        className='select-event-theme-button'\n                        onClick={handleClick}\n                        data-to='home'\n                    >\n                        Готово\n                    </Button>\n                </FixedLayout>\n            </Div>\n        </Panel>\n    );\n};\n\nexport default SelectEventTheme;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { platform } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Icon24Delete from '@vkontakte/icons/dist/24/delete';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Switch from '@vkontakte/vkui/dist/components/Switch/Switch';\nimport Icon28Write from '@vkontakte/icons/dist/28/write';\nimport Icon28CalendarOutline from '@vkontakte/icons/dist/28/calendar_outline';\nimport Icon28Notification from '@vkontakte/icons/dist/28/notification';\n\nimport Header from '../../components/Header/Header';\nimport { deleteEvent } from '../../store/actions/events';\n\nimport './EditEvent.css';\nimport { getReadableDate } from '../../utils/getReadableDate';\n\nconst osName = platform();\n\nconst Event = ({ id, goBack, eventId, goForward, userId, clearHistory }) => {\n    const dispatch = useDispatch();\n    const [event] = useSelector(({ events: { events } }) => events.filter(e => e.id === eventId));\n    const handleClick = props => {\n        dispatch(deleteEvent(userId, eventId));\n        goForward(props);\n        clearHistory();\n    };\n    \n    return (\n        <Panel id={id} separator={false}>\n            <Header className='edit-event-header' osName={osName} goBack={goBack} color='black' text='Редактировать'/>\n            <Div className={cn(['edit-event-wrapper'])}>\n                <Group>\n                    <Cell\n                        className={cn(['edit-cell', 'edit-name'])}\n                        expandable\n                        before={<Icon28Write className='edit-icon' fill='white'/>}\n                        onClick={goForward}\n                        data-to='update_event_name'\n                    >\n                        {event ? event.name : 'Название'}\n                    </Cell>\n                    <Cell\n                        className={cn(['edit-cell', 'edit-date'])}\n                        expandable\n                        before={<Icon28CalendarOutline className='edit-icon' fill='white'/>}\n                        onClick={goForward}\n                        data-to='update_event_date'\n                    >\n                        {getReadableDate(event && event.date) || 'Дата'}\n                    </Cell>\n                    <Cell\n                        className={cn(['edit-cell', 'edit-notifications'])}\n                        before={<Icon28Notification className='edit-icon' fill='white'/>}\n                        asideContent={<Switch disabled/>}\n                    >\n                        Уведомления\n                    </Cell>\n                    {event && event.theme && <Cell\n                        className={cn(['edit-cell', 'edit-theme', `theme-${event.theme}`])}\n                        expandable\n                        before={<Icon28Write className='edit-icon' fill='white'/>}\n                        onClick={goForward}\n                        data-to='update_event_theme'\n                    >\n                        Оформление\n                    </Cell>}\n                </Group>\n                <FixedLayout vertical='bottom'>\n                    <Button\n                        className='edit-event-button'\n                        onClick={handleClick}\n                        data-to='home'\n                    >\n                        <div className='button-container'>\n                            <Icon24Delete/>\n                            <p className='button-text'>Удалить</p>\n                        </div>\n                    </Button>\n                </FixedLayout>\n            </Div>\n        </Panel>\n    );\n};\n\nexport default Event;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Event from './panels/Event';\nimport SelectEventName from './panels/SelectEventName';\nimport SelectEventDate from './panels/SelectEventDate';\nimport SelectEventTheme from './panels/SelectEventTheme';\nimport EditEvent from './panels/EditEvent';\nimport { useNavigation } from './hooks/useNavigation';\nimport { loadEvents, LoadingState } from './store/actions/events';\n\nimport './theme.css';\nimport './App.css';\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\tconst { events, loadingState } = useSelector(({ events }) => events);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\tconst { activePanel, history, goForward, goBack, clearHistory } = useNavigation('home');\n\tconst [currentEventId, setCurrentEventId] = useState(null);\n\tconst [userId, setUserId] = useState(null);\n\tconst [currentEvent] = useSelector(({ events: { events } }) => events.filter(e => e.id === currentEventId));\n\t\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst { id } = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUserId(id);\n\t\t\tdispatch(loadEvents(id));\n\t\t}\n\t\t\n\t\tfetchData();\n\t}, [dispatch]);\n\t\n\tuseEffect(() => {\n\t\tif (loadingState === LoadingState.Loaded) {\n\t\t\tsetPopout(null);\n\t\t}\n\t}, [loadingState]);\n\t\n\treturn (\n\t\t<ConfigProvider isWebView>\n\t\t\t<View\n\t\t\t\tactivePanel={activePanel}\n\t\t\t\tpopout={popout}\n\t\t\t\tonSwipeBack={goBack}\n\t\t\t\thistory={history}\n\t\t\t\theader={false}\n\t\t\t>\n\t\t\t\t<Home\n\t\t\t\t\tid='home'\n\t\t\t\t\tfetchedEvents={events}\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tsetEvent={setCurrentEventId}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<Event\n\t\t\t\t\tid='event'\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\teventId={currentEventId}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<SelectEventName\n\t\t\t\t\tid='create_event_name'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<SelectEventDate\n\t\t\t\t\tid='create_event_date'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<SelectEventTheme\n\t\t\t\t\tid='create_event_theme'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t\tclearHistory={clearHistory}\n\t\t\t\t\tuserId={userId}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<EditEvent\n\t\t\t\t\tid='edit_event'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t\tclearHistory={clearHistory}\n\t\t\t\t\teventId={currentEventId}\n\t\t\t\t\tuserId={userId}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<SelectEventName\n\t\t\t\t\tid='update_event_name'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t\tuserId={userId}\n\t\t\t\t\tevent={currentEvent}\n\t\t\t\t\tisUpdater\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<SelectEventDate\n\t\t\t\t\tid='update_event_date'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t\tuserId={userId}\n\t\t\t\t\tevent={currentEvent}\n\t\t\t\t\tisUpdater\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<SelectEventTheme\n\t\t\t\t\tid='update_event_theme'\n\t\t\t\t\tgoForward={goForward}\n\t\t\t\t\tgoBack={goBack}\n\t\t\t\t\tuserId={userId}\n\t\t\t\t\tevent={currentEvent}\n\t\t\t\t\tisUpdater\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</ConfigProvider>\n\t);\n};\n\nexport default App;\n","import { useState } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n\nexport const useNavigation = initialPanel => {\n\tconst [activePanel, setActivePanel] = useState(initialPanel);\n\tconst [history, setHistory] = useState([initialPanel]);\n\n\tconst goBack = () => {\n\t\tconst hist = [...history];\n\t\thist.pop();\n\t\tconst panel = hist[hist.length - 1];\n\n\t\tif (panel === initialPanel) {\n\t\t\tbridge.send('VKWebAppDisableSwipeBack');\n\t\t}\n\n\t\tsetHistory(hist);\n\t\tsetActivePanel(panel);\n\t};\n\n\tconst goForward = ({ currentTarget: { dataset: { to } } }) => {\n\t\tconst hist = [...history];\n\n\t\thist.push(to);\n\n\t\tif (activePanel === initialPanel) {\n\t\t\tbridge.send('VKWebAppEnableSwipeBack');\n\t\t}\n\n\t\tsetHistory(hist);\n\t\tsetActivePanel(to);\n\t};\n\n\tconst clearHistory = () => {\n\t\tsetHistory([initialPanel]);\n\t};\n\n\treturn {\n\t\tactivePanel,\n\t\thistory,\n\t\tgoForward,\n\t\tgoBack,\n\t\tclearHistory,\n\t};\n};\n","import produce from 'immer';\n\nimport { EventsActionTypes, LoadingState } from '../actions/events';\n\nconst initialState = {\n\tevents: [],\n\tloadingState: LoadingState.NotLoaded,\n};\n\nexport const eventsReducer = produce((draft, action) => {\n\tif (!action) {\n\t\treturn;\n\t}\n\t\n\tconst { payload } = action;\n\t\n\tswitch (action.type) {\n\t\tcase EventsActionTypes.SET_EVENTS:\n\t\t\tdraft.events = payload.events;\n\t\t\tbreak;\n\t\t\n\t\tcase EventsActionTypes.ADD_EVENT:\n\t\t\tdraft.events.push(payload.event);\n\t\t\tbreak;\n\t\t\n\t\tcase EventsActionTypes.REMOVE_EVENT:\n\t\t\tdraft.events = draft.events.filter(({ id }) => id !== payload.eventId);\n\t\t\tbreak;\n\t\t\n\t\tcase EventsActionTypes.UPDATE_EVENT:\n\t\t\tdraft.events = draft.events.map(\n\t\t\t\tevent => event.id !== payload.eventId ? event : { ...event, ...payload.changes }\n\t\t\t);\n\t\t\tbreak;\n\t\t\n\t\tcase EventsActionTypes.SET_LOADING_STATE:\n\t\t\tdraft.loadingState = payload.loadingState;\n\t\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}, initialState);\n","import produce from 'immer';\n\nimport { NewEventActionTypes } from '../actions/newEvent';\n\nconst initialState = {\n\tnewEvent: {},\n};\n\nexport const newEventReducer = produce((draft, action) => {\n\tif (!action) {\n\t\treturn;\n\t}\n\n\tconst { payload } = action;\n\n\tswitch (action.type) {\n\tcase NewEventActionTypes.SET_EVENT_NAME:\n\t\tdraft.newEvent.name = payload.name;\n\t\tbreak;\n\n\tcase NewEventActionTypes.SET_EVENT_DATE:\n\t\tdraft.newEvent.date = payload.date;\n\t\tbreak;\n\n\tcase NewEventActionTypes.SET_EVENT_THEME:\n\t\tdraft.newEvent.theme = payload.theme;\n\t\tbreak;\n\n\tcase NewEventActionTypes.CLEAR:\n\t\tdraft.newEvent = initialState;\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n\t}\n}, initialState);\n","import { createStore, combineReducers } from 'redux';\n\nimport { eventsReducer } from './reducers/events';\nimport { newEventReducer } from './reducers/newEvent';\nimport { getMiddleware } from './middleware';\n\nconst rootReducer = combineReducers({\n\tevents: eventsReducer,\n\tnewEvent: newEventReducer,\n});\n\nexport const getStore = () => createStore(rootReducer, getMiddleware());\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { getStore } from './store';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\nconst store = getStore();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nif (process.env.NODE_ENV === 'development') {\n\t/* eslint-disable-next-line */\n\timport('./eruda').then(({ default: eruda }) => {}); // runtime download\n}\n","import ReduxThunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\n\nexport const getMiddleware = () => applyMiddleware(ReduxThunk);\n"],"sourceRoot":""}